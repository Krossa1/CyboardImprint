#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/german.dtsi"

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    macros {
        Ae: Ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp NUMBER_0 &kp N2 &kp N2 &kp N8>;
            label = "AE";
        };

        Oe: Oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp NUMBER_0 &kp N2 &kp N4 &kp N6>;
            label = "OE";
        };

        Ue: Ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp NUMBER_0 &kp N2 &kp N5 &kp N2>;
            label = "UE";
        };

        Sz: Sz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp NUMBER_0 &kp N2 &kp N2 &kp N3>;
            label = "SZ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp F1    &kp F2    &kp F3  &kp F4     &kp F5                  &kp F6          &kp F7                &kp F8           &kp F9            &kp F10        &kp F11
&kp CARET  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                  &kp N6          &kp N7                &kp N8           &kp N9            &kp N0         &kp QUESTION
&kp TAB    &kp Q     &kp W     &kp E   &kp R      &kp T                   &kp Y           &kp U                 &kp I            &kp O             &kp P          &kp SLASH
&kp CAPS   &kp A     &kp S     &kp D   &kp F      &kp G                   &kp H           &kp J                 &kp K            &kp L             &kp PLUS       &kp HASH
&kp LSHFT  &kp Z     &kp X     &kp C   &kp V      &kp B                   &kp N           &kp M                 &kp COMMA        &kp DOT           &kp MINUS      &kp RSHFT
&kp LCTRL  &kp LGUI  &kp LALT  &tog 1  &tog 2                                             &kp LEFT_PARENTHESIS  &kp LEFT_BRACE   &kp LEFT_BRACKET  &kp LESS_THAN  &kp RCTRL
                                       &kp SPACE  &kp ENTER  &kp LC(C)    &to 2           &kp UP_ARROW          &kp BACKSPACE
                                       &mkp MB1   &mkp MB2   &kp LC(V)    &kp LEFT_ARROW  &kp DOWN              &kp RIGHT_ARROW
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &to 0
&to 0        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 0
                                                       &trans        &trans        &trans    &to 0   &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
            >;
        };

        SwitchLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans                 &trans           &trans             &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans                 &trans           &trans             &trans            &Sz
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &Ue                    &trans           &Oe                &trans            &kp BACKSLASH
&trans  &Ae     &trans  &trans  &trans  &trans            &trans          &trans                 &trans           &trans             &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans                 &kp SEMI         &kp COLON          &trans            &trans
&trans  &trans  &trans  &trans  &trans                                    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans
                                &trans  &trans  &trans    &to 0           &kp UP_ARROW           &trans
                                &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW         &kp RIGHT_ARROW
            >;
        };
    };
};

//right hand trackball configuration
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
