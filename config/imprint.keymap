#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp F1    &kp F2    &kp F3  &kp F4     &kp F5                &kp F6                &kp F7         &kp F8         &kp F9      &kp F10       &kp F11
&kp CARET  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                &kp N6                &kp N7         &kp N8         &kp N9      &kp N0        &kp QUESTION
&kp TAB    &kp Q     &kp W     &kp E   &kp R      &kp T                 &kp Y                 &kp U          &kp I          &kp O       &kp P         &kp HASH
&kp CAPS   &kp A     &kp S     &kp D   &kp F      &kp G                 &kp H                 &kp J          &kp K          &kp L       &kp PLUS      &kp MINUS
&kp LSHFT  &kp Z     &kp X     &kp C   &kp V      &kp B                 &kp N                 &kp M          &kp COMMA      &kp DOT     &kp UP_ARROW  &kp LEFT_ARROW
&kp LCTRL  &kp LGUI  &kp LALT  &mo 1   &mo 2                                                  &kp BACKSLASH  &kp RA(N8)     &kp LS(N7)  &kp DOWN      &kp RIGHT_ARROW
                                       &kp SPACE  &mo 2     &mo 1       &kp LEFT_PARENTHESIS  &kp LC(C)      &kp BACKSPACE
                                       &mkp MB1   &mkp MB2  &mkp MB3    &kp LEFT_BRACE        &kp LC(Z)      &kp ENTER
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans           &trans
&to 0   &trans  &trans  &trans  &trans                            &trans           &trans           &trans           &trans           &to 0
                                &trans  &trans  &trans    &to 0   &trans           &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };

        SwitchLayer {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans            &trans                 &trans             &trans         &trans            &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans            &trans                 &trans             &trans         &trans            &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans            &trans                 &kp LEFT_BRACKET   &trans         &kp SEMICOLON     &trans  &trans
&trans  &kp SQT  &trans  &trans  &trans  &trans            &trans                 &trans             &trans         &trans            &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans            &trans                 &trans             &kp SEMICOLON  &kp COLON         &trans  &trans
&trans  &trans   &trans  &trans  &trans                                           &kp LS(BACKSLASH)  &kt RA(N8)     &kp RA(QUESTION)  &trans  &trans
                                 &trans  &trans  &trans    &kp RIGHT_PARENTHESIS  &kp LC(V)          &trans
                                 &trans  &trans  &trans    &kp RIGHT_BRACE        &kp LC(Z)          &trans
            >;
        };
    };
};

//right hand trackball configuration
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),
        <&zip_xy_scaler 10 80>,
        // make this trackball output scrolling events by default instead of cursor movement,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
